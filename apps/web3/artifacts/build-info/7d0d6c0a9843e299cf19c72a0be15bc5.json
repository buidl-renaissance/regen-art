{"id":"7d0d6c0a9843e299cf19c72a0be15bc5","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"contracts/ArtNightRaffle.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\n/**\n * @title ArtNightRaffle\n * @dev A raffle contract that uses Chainlink VRF 2.5 to randomly select winners\n */\ncontract ArtNightRaffle is VRFConsumerBaseV2, Ownable, ReentrancyGuard {\n    // Chainlink VRF 2.5 Configuration\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\n    uint64 private immutable i_subscriptionId;\n    bytes32 private immutable i_gasLane;\n    uint32 private immutable i_callbackGasLimit;\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\n    uint32 private constant NUM_WORDS = 1;\n\n    // Raffle state\n    uint256[] private s_raffleTickets;\n    uint256 private s_winner;\n    bool private s_raffleCompleted;\n    bool private s_raffleInProgress;\n    uint256 private s_lastRequestId;\n\n    // Events\n    event RaffleTicketsSet(uint256[] tickets);\n    event RaffleStarted(uint256 requestId);\n    event WinnerSelected(uint256 winner);\n    event RaffleCompleted(uint256 winner);\n\n    // Errors\n    error ArtNightRaffle__RaffleAlreadyInProgress();\n    error ArtNightRaffle__RaffleNotInProgress();\n    error ArtNightRaffle__NoTicketsSet();\n    error ArtNightRaffle__RaffleAlreadyCompleted();\n    error ArtNightRaffle__InvalidTicketArray();\n\n    constructor(\n        address vrfCoordinatorV2,\n        uint64 subscriptionId,\n        bytes32 gasLane,\n        uint32 callbackGasLimit\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) Ownable(msg.sender) {\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\n        i_subscriptionId = subscriptionId;\n        i_gasLane = gasLane;\n        i_callbackGasLimit = callbackGasLimit;\n    }\n\n    /**\n     * @dev Set the raffle tickets array\n     * @param tickets Array of ticket numbers\n     */\n    function setRaffleTickets(uint256[] memory tickets) external onlyOwner {\n        if (tickets.length == 0) {\n            revert ArtNightRaffle__InvalidTicketArray();\n        }\n        if (s_raffleCompleted) {\n            revert ArtNightRaffle__RaffleAlreadyCompleted();\n        }\n        \n        s_raffleTickets = tickets;\n        emit RaffleTicketsSet(tickets);\n    }\n\n    /**\n     * @dev Start the raffle by requesting random number from Chainlink VRF\n     */\n    function startRaffle() external onlyOwner nonReentrant {\n        if (s_raffleTickets.length == 0) {\n            revert ArtNightRaffle__NoTicketsSet();\n        }\n        if (s_raffleInProgress) {\n            revert ArtNightRaffle__RaffleAlreadyInProgress();\n        }\n        if (s_raffleCompleted) {\n            revert ArtNightRaffle__RaffleAlreadyCompleted();\n        }\n\n        s_raffleInProgress = true;\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\n            i_gasLane,\n            i_subscriptionId,\n            REQUEST_CONFIRMATIONS,\n            i_callbackGasLimit,\n            NUM_WORDS\n        );\n        s_lastRequestId = requestId;\n        emit RaffleStarted(requestId);\n    }\n\n    /**\n     * @dev Callback function used by VRF Coordinator to return the random number\n     * @param requestId The request ID for fulfillment\n     * @param randomWords Array of random words returned by VRF\n     */\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        if (requestId != s_lastRequestId) {\n            return;\n        }\n\n        uint256 randomNumber = randomWords[0];\n        uint256 winnerIndex = randomNumber % s_raffleTickets.length;\n        s_winner = s_raffleTickets[winnerIndex];\n        s_raffleInProgress = false;\n        s_raffleCompleted = true;\n\n        emit WinnerSelected(s_winner);\n        emit RaffleCompleted(s_winner);\n    }\n\n    // Getter functions\n    function getRaffleTickets() external view returns (uint256[] memory) {\n        return s_raffleTickets;\n    }\n\n    function getWinner() external view returns (uint256) {\n        if (!s_raffleCompleted) {\n            revert ArtNightRaffle__RaffleNotInProgress();\n        }\n        return s_winner;\n    }\n\n    function isRaffleCompleted() external view returns (bool) {\n        return s_raffleCompleted;\n    }\n\n    function isRaffleInProgress() external view returns (bool) {\n        return s_raffleInProgress;\n    }\n\n    function getLastRequestId() external view returns (uint256) {\n        return s_lastRequestId;\n    }\n\n    // VRF Configuration getters\n    function getVrfCoordinator() external view returns (address) {\n        return address(i_vrfCoordinator);\n    }\n\n    function getSubscriptionId() external view returns (uint64) {\n        return i_subscriptionId;\n    }\n\n    function getGasLane() external view returns (bytes32) {\n        return i_gasLane;\n    }\n\n    function getCallbackGasLimit() external view returns (uint32) {\n        return i_callbackGasLimit;\n    }\n} "}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5520:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5677:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5683:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5700:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5683:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5565:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5652:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5677:0:0"},"scope":57,"src":"5640:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5724:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6533:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6552:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6552:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6598:0:0"},"scope":57,"src":"6505:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6883:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6897:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6893:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6907:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6889:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6923:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6968:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6964:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6976:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6938:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6931:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"7022:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"7033:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"7003:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"7003:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6825:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6844:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6844:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6883:0:0"},"scope":57,"src":"6794:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1719:0","usedErrors":[8],"usedEvents":[]}],"src":"32:7021:0"},"id":0},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFCoordinatorV2Interface","nameLocation":"120:25:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"150:267:1","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"429:16:1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"445:2:1"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"471:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":62,"name":"uint16","nodeType":"ElementaryTypeName","src":"471:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"479:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"479:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"487:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"487:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"487:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"470:34:1"},"scope":153,"src":"420:85:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"509:1511:1","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2032:18:1","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"keyHash","nameLocation":"2064:7:1","nodeType":"VariableDeclaration","scope":86,"src":"2056:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"subId","nameLocation":"2084:5:1","nodeType":"VariableDeclaration","scope":86,"src":"2077:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2102:27:1","nodeType":"VariableDeclaration","scope":86,"src":"2095:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":76,"name":"uint16","nodeType":"ElementaryTypeName","src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2142:16:1","nodeType":"VariableDeclaration","scope":86,"src":"2135:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":78,"name":"uint32","nodeType":"ElementaryTypeName","src":"2135:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"numWords","nameLocation":"2171:8:1","nodeType":"VariableDeclaration","scope":86,"src":"2164:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:133:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"requestId","nameLocation":"2210:9:1","nodeType":"VariableDeclaration","scope":86,"src":"2202:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:19:1"},"scope":153,"src":"2023:198:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2225:384:1","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2621:18:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2639:2:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"subId","nameLocation":"2667:5:1","nodeType":"VariableDeclaration","scope":92,"src":"2660:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":89,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2659:14:1"},"scope":153,"src":"2612:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2678:381:1","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3071:15:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"subId","nameLocation":"3099:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3092:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3086:22:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"balance","nameLocation":"3139:7:1","nodeType":"VariableDeclaration","scope":107,"src":"3132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":97,"name":"uint96","nodeType":"ElementaryTypeName","src":"3132:6:1","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:1","nodeType":"VariableDeclaration","scope":107,"src":"3148:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":99,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"owner","nameLocation":"3173:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3165:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"consumers","nameLocation":"3197:9:1","nodeType":"VariableDeclaration","scope":107,"src":"3180:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ArrayTypeName","src":"3180:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3131:76:1"},"scope":153,"src":"3062:146:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3212:164:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3388:32:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"subId","nameLocation":"3428:5:1","nodeType":"VariableDeclaration","scope":115,"src":"3421:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"3421:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"newOwner","nameLocation":"3443:8:1","nodeType":"VariableDeclaration","scope":115,"src":"3435:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:32:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3461:0:1"},"scope":153,"src":"3379:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3466:212:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3690:31:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"subId","nameLocation":"3729:5:1","nodeType":"VariableDeclaration","scope":121,"src":"3722:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":117,"name":"uint64","nodeType":"ElementaryTypeName","src":"3722:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3721:14:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"3744:0:1"},"scope":153,"src":"3681:64:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3749:170:1","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3931:11:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"subId","nameLocation":"3950:5:1","nodeType":"VariableDeclaration","scope":129,"src":"3943:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":123,"name":"uint64","nodeType":"ElementaryTypeName","src":"3943:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"consumer","nameLocation":"3965:8:1","nodeType":"VariableDeclaration","scope":129,"src":"3957:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3942:32:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"3983:0:1"},"scope":153,"src":"3922:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3988:172:1","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4172:14:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"subId","nameLocation":"4194:5:1","nodeType":"VariableDeclaration","scope":137,"src":"4187:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":131,"name":"uint64","nodeType":"ElementaryTypeName","src":"4187:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"consumer","nameLocation":"4209:8:1","nodeType":"VariableDeclaration","scope":137,"src":"4201:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:32:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4227:0:1"},"scope":153,"src":"4163:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"4232:140:1","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4384:18:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"subId","nameLocation":"4410:5:1","nodeType":"VariableDeclaration","scope":145,"src":"4403:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":139,"name":"uint64","nodeType":"ElementaryTypeName","src":"4403:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"4425:2:1","nodeType":"VariableDeclaration","scope":145,"src":"4417:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:26:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4437:0:1"},"scope":153,"src":"4375:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4743:20:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"subId","nameLocation":"4771:5:1","nodeType":"VariableDeclaration","scope":152,"src":"4764:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"4764:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4763:14:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"4801:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4800:6:1"},"scope":153,"src":"4734:73:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":154,"src":"110:4699:1","usedErrors":[],"usedEvents":[]}],"src":"32:4778:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[331],"Ownable":[301]},"id":302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":332,"src":"128:45:2","symbolAliases":[{"foreign":{"id":156,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":159,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":331,"src":"692:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":301,"linearizedBaseContracts":[301,331],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":162,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":301,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":167,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":167,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":172,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":172,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":178,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":178,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":178,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":203,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":184,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":198,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":197,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":190,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":196,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":200,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":199,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":204,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":204,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":301,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":211,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":207,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":210,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":212,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":218,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":217,"id":219,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":301,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":236,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":235,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":230,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":234,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":301,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":251,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":252,"implemented":true,"kind":"function","modifiers":[{"id":242,"kind":"modifierInvocation","modifierName":{"id":241,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":301,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":279,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":273,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":276,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":280,"implemented":true,"kind":"function","modifiers":[{"id":258,"kind":"modifierInvocation","modifierName":{"id":257,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":280,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":301,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":299,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":299,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":289,"initialValue":{"id":288,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":290,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":291,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":293,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":295,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":294,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":300,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":301,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":302,"src":"663:2438:2","usedErrors":[167,172],"usedEvents":[178]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[331]},"id":332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":303,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"127:496:3","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":331,"linearizedBaseContracts":[331],"name":"Context","nameLocation":"642:7:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":312,"nodeType":"Block","src":"718:34:3","statements":[{"expression":{"expression":{"id":309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:3","memberName":"sender","nodeType":"MemberAccess","src":"735:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":308,"id":311,"nodeType":"Return","src":"728:17:3"}]},"id":313,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:3","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[],"src":"675:2:3"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":313,"src":"709:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:3"},"scope":331,"src":"656:96:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":321,"nodeType":"Block","src":"825:32:3","statements":[{"expression":{"expression":{"id":318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:3","memberName":"data","nodeType":"MemberAccess","src":"842:8:3","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":317,"id":320,"nodeType":"Return","src":"835:15:3"}]},"id":322,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:3","nodeType":"FunctionDefinition","parameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"775:2:3"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":322,"src":"809:14:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":315,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:3"},"scope":331,"src":"758:99:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":329,"nodeType":"Block","src":"935:25:3","statements":[{"expression":{"hexValue":"30","id":327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":326,"id":328,"nodeType":"Return","src":"945:8:3"}]},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:3","nodeType":"FunctionDefinition","parameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"892:2:3"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":330,"src":"926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":324,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:3"},"scope":331,"src":"863:97:3","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":332,"src":"624:338:3","usedErrors":[],"usedEvents":[]}],"src":"101:862:3"},"id":3},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[400]},"id":401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":333,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"135:894:4","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":400,"linearizedBaseContracts":[400],"name":"ReentrancyGuard","nameLocation":"1048:15:4","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":337,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:4","nodeType":"VariableDeclaration","scope":400,"src":"1818:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":340,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:4","nodeType":"VariableDeclaration","scope":400,"src":"1864:36:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":342,"mutability":"mutable","name":"_status","nameLocation":"1923:7:4","nodeType":"VariableDeclaration","scope":400,"src":"1907:23:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"1937:52:4","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":345,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:4","nodeType":"ErrorDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[],"src":"2028:2:4"},"src":"1994:37:4"},{"body":{"id":352,"nodeType":"Block","src":"2051:38:4","statements":[{"expression":{"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":348,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2061:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":349,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"2071:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":351,"nodeType":"ExpressionStatement","src":"2061:21:4"}]},"id":353,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":346,"nodeType":"ParameterList","parameters":[],"src":"2048:2:4"},"returnParameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"2051:0:4"},"scope":400,"src":"2037:52:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":363,"nodeType":"Block","src":"2490:79:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":356,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"2500:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":358,"nodeType":"ExpressionStatement","src":"2500:21:4"},{"id":359,"nodeType":"PlaceholderStatement","src":"2531:1:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":360,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2542:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":362,"nodeType":"ExpressionStatement","src":"2542:20:4"}]},"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"2095:366:4","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":364,"name":"nonReentrant","nameLocation":"2475:12:4","nodeType":"ModifierDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[],"src":"2487:2:4"},"src":"2466:103:4","virtual":false,"visibility":"internal"},{"body":{"id":379,"nodeType":"Block","src":"2614:268:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":367,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2702:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":368,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2713:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":374,"nodeType":"IfStatement","src":"2698:86:4","trueBody":{"id":373,"nodeType":"Block","src":"2722:62:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":370,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"2743:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":372,"nodeType":"RevertStatement","src":"2736:37:4"}]}},{"expression":{"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":375,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"2858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":376,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"2868:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":378,"nodeType":"ExpressionStatement","src":"2858:17:4"}]},"id":380,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:4","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2603:2:4"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[],"src":"2614:0:4"},"scope":400,"src":"2575:307:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":387,"nodeType":"Block","src":"2926:170:4","statements":[{"expression":{"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":383,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"3068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":384,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"3078:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":386,"nodeType":"ExpressionStatement","src":"3068:21:4"}]},"id":388,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:4","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[],"src":"2915:2:4"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"2926:0:4"},"scope":400,"src":"2888:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":398,"nodeType":"Block","src":"3339:42:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":394,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"3356:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":395,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"3367:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":393,"id":397,"nodeType":"Return","src":"3349:25:4"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"3102:168:4","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:4","nodeType":"FunctionDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"3307:2:4"},"returnParameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":399,"src":"3333:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":391,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:4"},"scope":400,"src":"3275:106:4","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":401,"src":"1030:2353:4","usedErrors":[345],"usedEvents":[]}],"src":"109:3275:4"},"id":4},"contracts/ArtNightRaffle.sol":{"ast":{"absolutePath":"contracts/ArtNightRaffle.sol","exportedSymbols":{"ArtNightRaffle":[725],"Context":[331],"Ownable":[301],"ReentrancyGuard":[400],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[153]},"id":726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":402,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":403,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":58,"src":"58:65:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","id":404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":154,"src":"124:84:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":302,"src":"209:52:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":726,"sourceUnit":401,"src":"262:59:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":408,"name":"VRFConsumerBaseV2","nameLocations":["464:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"464:17:5"},"id":409,"nodeType":"InheritanceSpecifier","src":"464:17:5"},{"baseName":{"id":410,"name":"Ownable","nameLocations":["483:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"483:7:5"},"id":411,"nodeType":"InheritanceSpecifier","src":"483:7:5"},{"baseName":{"id":412,"name":"ReentrancyGuard","nameLocations":["492:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":400,"src":"492:15:5"},"id":413,"nodeType":"InheritanceSpecifier","src":"492:15:5"}],"canonicalName":"ArtNightRaffle","contractDependencies":[],"contractKind":"contract","documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"323:113:5","text":" @title ArtNightRaffle\n @dev A raffle contract that uses Chainlink VRF 2.5 to randomly select winners"},"fullyImplemented":true,"id":725,"linearizedBaseContracts":[725,400,301,331,57],"name":"ArtNightRaffle","nameLocation":"446:14:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":416,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"597:16:5","nodeType":"VariableDeclaration","scope":725,"src":"553:60:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":415,"nodeType":"UserDefinedTypeName","pathNode":{"id":414,"name":"VRFCoordinatorV2Interface","nameLocations":["553:25:5"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"553:25:5"},"referencedDeclaration":153,"src":"553:25:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":418,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"644:16:5","nodeType":"VariableDeclaration","scope":725,"src":"619:41:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":417,"name":"uint64","nodeType":"ElementaryTypeName","src":"619:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":420,"mutability":"immutable","name":"i_gasLane","nameLocation":"692:9:5","nodeType":"VariableDeclaration","scope":725,"src":"666:35:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"666:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":422,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"732:18:5","nodeType":"VariableDeclaration","scope":725,"src":"707:43:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":421,"name":"uint32","nodeType":"ElementaryTypeName","src":"707:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":425,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"780:21:5","nodeType":"VariableDeclaration","scope":725,"src":"756:49:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":423,"name":"uint16","nodeType":"ElementaryTypeName","src":"756:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"804:1:5","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":428,"mutability":"constant","name":"NUM_WORDS","nameLocation":"835:9:5","nodeType":"VariableDeclaration","scope":725,"src":"811:37:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":426,"name":"uint32","nodeType":"ElementaryTypeName","src":"811:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"847:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":431,"mutability":"mutable","name":"s_raffleTickets","nameLocation":"893:15:5","nodeType":"VariableDeclaration","scope":725,"src":"875:33:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":430,"nodeType":"ArrayTypeName","src":"875:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"private"},{"constant":false,"id":433,"mutability":"mutable","name":"s_winner","nameLocation":"930:8:5","nodeType":"VariableDeclaration","scope":725,"src":"914:24:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":435,"mutability":"mutable","name":"s_raffleCompleted","nameLocation":"957:17:5","nodeType":"VariableDeclaration","scope":725,"src":"944:30:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":434,"name":"bool","nodeType":"ElementaryTypeName","src":"944:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":437,"mutability":"mutable","name":"s_raffleInProgress","nameLocation":"993:18:5","nodeType":"VariableDeclaration","scope":725,"src":"980:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":436,"name":"bool","nodeType":"ElementaryTypeName","src":"980:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"id":439,"mutability":"mutable","name":"s_lastRequestId","nameLocation":"1033:15:5","nodeType":"VariableDeclaration","scope":725,"src":"1017:31:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1017:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"4b01001497a2ed98b9441e36ae22999a581260d42bbf2a48533efdaa74f29882","id":444,"name":"RaffleTicketsSet","nameLocation":"1075:16:5","nodeType":"EventDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"indexed":false,"mutability":"mutable","name":"tickets","nameLocation":"1102:7:5","nodeType":"VariableDeclaration","scope":444,"src":"1092:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":441,"nodeType":"ArrayTypeName","src":"1092:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1091:19:5"},"src":"1069:42:5"},{"anonymous":false,"eventSelector":"e23fdee573320f133dc10284dcb988d5c782f07ec7b6b01d7ffbc6d537b2a421","id":448,"name":"RaffleStarted","nameLocation":"1122:13:5","nodeType":"EventDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"1144:9:5","nodeType":"VariableDeclaration","scope":448,"src":"1136:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1135:19:5"},"src":"1116:39:5"},{"anonymous":false,"eventSelector":"5b8029a9910b8fcad05daba83c75f73f39307c65c013cab42074f6a1d9cc4fb9","id":452,"name":"WinnerSelected","nameLocation":"1166:14:5","nodeType":"EventDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"1189:6:5","nodeType":"VariableDeclaration","scope":452,"src":"1181:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1180:16:5"},"src":"1160:37:5"},{"anonymous":false,"eventSelector":"1e15dbf45ae533c182513b50c5b94530ab41942881a0bb1dc4206313d8b41159","id":456,"name":"RaffleCompleted","nameLocation":"1208:15:5","nodeType":"EventDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"indexed":false,"mutability":"mutable","name":"winner","nameLocation":"1232:6:5","nodeType":"VariableDeclaration","scope":456,"src":"1224:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1223:16:5"},"src":"1202:38:5"},{"errorSelector":"86b8bc01","id":458,"name":"ArtNightRaffle__RaffleAlreadyInProgress","nameLocation":"1266:39:5","nodeType":"ErrorDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[],"src":"1305:2:5"},"src":"1260:48:5"},{"errorSelector":"8d5f7c4a","id":460,"name":"ArtNightRaffle__RaffleNotInProgress","nameLocation":"1319:35:5","nodeType":"ErrorDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"1354:2:5"},"src":"1313:44:5"},{"errorSelector":"a205f2fa","id":462,"name":"ArtNightRaffle__NoTicketsSet","nameLocation":"1368:28:5","nodeType":"ErrorDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"1396:2:5"},"src":"1362:37:5"},{"errorSelector":"f48e3163","id":464,"name":"ArtNightRaffle__RaffleAlreadyCompleted","nameLocation":"1410:38:5","nodeType":"ErrorDefinition","parameters":{"id":463,"nodeType":"ParameterList","parameters":[],"src":"1448:2:5"},"src":"1404:47:5"},{"errorSelector":"d39d77dc","id":466,"name":"ArtNightRaffle__InvalidTicketArray","nameLocation":"1462:34:5","nodeType":"ErrorDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"1496:2:5"},"src":"1456:43:5"},{"body":{"id":502,"nodeType":"Block","src":"1702:198:5","statements":[{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":484,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"1712:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":486,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"1757:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":485,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1731:25:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$153_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1731:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1712:62:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":489,"nodeType":"ExpressionStatement","src":"1712:62:5"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"1784:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"1803:14:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1784:33:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":493,"nodeType":"ExpressionStatement","src":"1784:33:5"},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":494,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"1827:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":495,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":472,"src":"1839:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1827:19:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":497,"nodeType":"ExpressionStatement","src":"1827:19:5"},{"expression":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":498,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"1856:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":499,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"1877:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1856:37:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":501,"nodeType":"ExpressionStatement","src":"1856:37:5"}]},"id":503,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":477,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"1664:16:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":478,"kind":"baseConstructorSpecifier","modifierName":{"id":476,"name":"VRFConsumerBaseV2","nameLocations":["1646:17:5"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1646:17:5"},"nodeType":"ModifierInvocation","src":"1646:35:5"},{"arguments":[{"expression":{"id":480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1690:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1694:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1690:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":482,"kind":"baseConstructorSpecifier","modifierName":{"id":479,"name":"Ownable","nameLocations":["1682:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"1682:7:5"},"nodeType":"ModifierInvocation","src":"1682:19:5"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1534:16:5","nodeType":"VariableDeclaration","scope":503,"src":"1526:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"1526:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":470,"mutability":"mutable","name":"subscriptionId","nameLocation":"1567:14:5","nodeType":"VariableDeclaration","scope":503,"src":"1560:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":469,"name":"uint64","nodeType":"ElementaryTypeName","src":"1560:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":472,"mutability":"mutable","name":"gasLane","nameLocation":"1599:7:5","nodeType":"VariableDeclaration","scope":503,"src":"1591:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":471,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1591:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":474,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1623:16:5","nodeType":"VariableDeclaration","scope":503,"src":"1616:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":473,"name":"uint32","nodeType":"ElementaryTypeName","src":"1616:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1516:129:5"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[],"src":"1702:0:5"},"scope":725,"src":"1505:395:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":535,"nodeType":"Block","src":"2080:297:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":512,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2094:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:6:5","memberName":"length","nodeType":"MemberAccess","src":"2094:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2112:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2094:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":520,"nodeType":"IfStatement","src":"2090:93:5","trueBody":{"id":519,"nodeType":"Block","src":"2115:68:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":516,"name":"ArtNightRaffle__InvalidTicketArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"2136:34:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2136:36:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":518,"nodeType":"RevertStatement","src":"2129:43:5"}]}},{"condition":{"id":521,"name":"s_raffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2196:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":526,"nodeType":"IfStatement","src":"2192:95:5","trueBody":{"id":525,"nodeType":"Block","src":"2215:72:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":522,"name":"ArtNightRaffle__RaffleAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2236:38:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"RevertStatement","src":"2229:47:5"}]}},{"expression":{"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":527,"name":"s_raffleTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2305:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":528,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2323:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"2305:25:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":530,"nodeType":"ExpressionStatement","src":"2305:25:5"},{"eventCall":{"arguments":[{"id":532,"name":"tickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"2362:7:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":531,"name":"RaffleTicketsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2345:16:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256[] memory)"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2345:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"EmitStatement","src":"2340:30:5"}]},"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"1906:98:5","text":" @dev Set the raffle tickets array\n @param tickets Array of ticket numbers"},"functionSelector":"868c55c6","id":536,"implemented":true,"kind":"function","modifiers":[{"id":510,"kind":"modifierInvocation","modifierName":{"id":509,"name":"onlyOwner","nameLocations":["2070:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2070:9:5"},"nodeType":"ModifierInvocation","src":"2070:9:5"}],"name":"setRaffleTickets","nameLocation":"2018:16:5","nodeType":"FunctionDefinition","parameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"tickets","nameLocation":"2052:7:5","nodeType":"VariableDeclaration","scope":536,"src":"2035:24:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"2035:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":506,"nodeType":"ArrayTypeName","src":"2035:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2034:26:5"},"returnParameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"2080:0:5"},"scope":725,"src":"2009:368:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":588,"nodeType":"Block","src":"2530:651:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":544,"name":"s_raffleTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"2544:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2560:6:5","memberName":"length","nodeType":"MemberAccess","src":"2544:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2570:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2544:27:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":552,"nodeType":"IfStatement","src":"2540:95:5","trueBody":{"id":551,"nodeType":"Block","src":"2573:62:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":548,"name":"ArtNightRaffle__NoTicketsSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":462,"src":"2594:28:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2594:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"RevertStatement","src":"2587:37:5"}]}},{"condition":{"id":553,"name":"s_raffleInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2648:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":558,"nodeType":"IfStatement","src":"2644:97:5","trueBody":{"id":557,"nodeType":"Block","src":"2668:73:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":554,"name":"ArtNightRaffle__RaffleAlreadyInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"2689:39:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2689:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"RevertStatement","src":"2682:48:5"}]}},{"condition":{"id":559,"name":"s_raffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2754:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":564,"nodeType":"IfStatement","src":"2750:95:5","trueBody":{"id":563,"nodeType":"Block","src":"2773:72:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":560,"name":"ArtNightRaffle__RaffleAlreadyCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"2794:38:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2794:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":562,"nodeType":"RevertStatement","src":"2787:47:5"}]}},{"expression":{"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":565,"name":"s_raffleInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2855:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2876:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2855:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":568,"nodeType":"ExpressionStatement","src":"2855:25:5"},{"assignments":[570],"declarations":[{"constant":false,"id":570,"mutability":"mutable","name":"requestId","nameLocation":"2898:9:5","nodeType":"VariableDeclaration","scope":588,"src":"2890:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":569,"name":"uint256","nodeType":"ElementaryTypeName","src":"2890:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":579,"initialValue":{"arguments":[{"id":573,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"2959:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":574,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2982:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":575,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"3012:21:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":576,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"3047:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":577,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3079:9:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":571,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2910:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2927:18:5","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":86,"src":"2910:35:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2910:188:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2890:208:5"},{"expression":{"id":582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":580,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3108:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":581,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3126:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3108:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":583,"nodeType":"ExpressionStatement","src":"3108:27:5"},{"eventCall":{"arguments":[{"id":585,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"3164:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":584,"name":"RaffleStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"3150:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3150:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":587,"nodeType":"EmitStatement","src":"3145:29:5"}]},"documentation":{"id":537,"nodeType":"StructuredDocumentation","src":"2383:87:5","text":" @dev Start the raffle by requesting random number from Chainlink VRF"},"functionSelector":"242284f1","id":589,"implemented":true,"kind":"function","modifiers":[{"id":540,"kind":"modifierInvocation","modifierName":{"id":539,"name":"onlyOwner","nameLocations":["2507:9:5"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2507:9:5"},"nodeType":"ModifierInvocation","src":"2507:9:5"},{"id":542,"kind":"modifierInvocation","modifierName":{"id":541,"name":"nonReentrant","nameLocations":["2517:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":364,"src":"2517:12:5"},"nodeType":"ModifierInvocation","src":"2517:12:5"}],"name":"startRaffle","nameLocation":"2484:11:5","nodeType":"FunctionDefinition","parameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"2495:2:5"},"returnParameters":{"id":543,"nodeType":"ParameterList","parameters":[],"src":"2530:0:5"},"scope":725,"src":"2475:706:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[30],"body":{"id":640,"nodeType":"Block","src":"3499:397:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":599,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"3513:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":600,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"3526:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3513:28:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":604,"nodeType":"IfStatement","src":"3509:65:5","trueBody":{"id":603,"nodeType":"Block","src":"3543:31:5","statements":[{"functionReturnParameters":598,"id":602,"nodeType":"Return","src":"3557:7:5"}]}},{"assignments":[606],"declarations":[{"constant":false,"id":606,"mutability":"mutable","name":"randomNumber","nameLocation":"3592:12:5","nodeType":"VariableDeclaration","scope":640,"src":"3584:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":605,"name":"uint256","nodeType":"ElementaryTypeName","src":"3584:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":610,"initialValue":{"baseExpression":{"id":607,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3607:11:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":609,"indexExpression":{"hexValue":"30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3619:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3607:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3584:37:5"},{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"winnerIndex","nameLocation":"3639:11:5","nodeType":"VariableDeclaration","scope":640,"src":"3631:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":617,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":613,"name":"randomNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"3653:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":614,"name":"s_raffleTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3668:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3684:6:5","memberName":"length","nodeType":"MemberAccess","src":"3668:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3653:37:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3631:59:5"},{"expression":{"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":618,"name":"s_winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3700:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":619,"name":"s_raffleTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"3711:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":621,"indexExpression":{"id":620,"name":"winnerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3727:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3711:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3700:39:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":623,"nodeType":"ExpressionStatement","src":"3700:39:5"},{"expression":{"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":624,"name":"s_raffleInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"3749:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3770:5:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3749:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":627,"nodeType":"ExpressionStatement","src":"3749:26:5"},{"expression":{"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":628,"name":"s_raffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3785:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3805:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3785:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":631,"nodeType":"ExpressionStatement","src":"3785:24:5"},{"eventCall":{"arguments":[{"id":633,"name":"s_winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3840:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":632,"name":"WinnerSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"3825:14:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3825:24:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":635,"nodeType":"EmitStatement","src":"3820:29:5"},{"eventCall":{"arguments":[{"id":637,"name":"s_winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"3880:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":636,"name":"RaffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"3864:15:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3864:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"EmitStatement","src":"3859:30:5"}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"3187:212:5","text":" @dev Callback function used by VRF Coordinator to return the random number\n @param requestId The request ID for fulfillment\n @param randomWords Array of random words returned by VRF"},"id":641,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3413:18:5","nodeType":"FunctionDefinition","overrides":{"id":597,"nodeType":"OverrideSpecifier","overrides":[],"src":"3490:8:5"},"parameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"requestId","nameLocation":"3440:9:5","nodeType":"VariableDeclaration","scope":641,"src":"3432:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"3432:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"randomWords","nameLocation":"3468:11:5","nodeType":"VariableDeclaration","scope":641,"src":"3451:28:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":593,"name":"uint256","nodeType":"ElementaryTypeName","src":"3451:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":594,"nodeType":"ArrayTypeName","src":"3451:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3431:49:5"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"3499:0:5"},"scope":725,"src":"3404:492:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":649,"nodeType":"Block","src":"3995:39:5","statements":[{"expression":{"id":647,"name":"s_raffleTickets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4012:15:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":646,"id":648,"nodeType":"Return","src":"4005:22:5"}]},"functionSelector":"5a3e2dac","id":650,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleTickets","nameLocation":"3935:16:5","nodeType":"FunctionDefinition","parameters":{"id":642,"nodeType":"ParameterList","parameters":[],"src":"3951:2:5"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":650,"src":"3977:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"3977:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":644,"nodeType":"ArrayTypeName","src":"3977:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3976:18:5"},"scope":725,"src":"3926:108:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":664,"nodeType":"Block","src":"4093:134:5","statements":[{"condition":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4107:18:5","subExpression":{"id":655,"name":"s_raffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4108:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"4103:93:5","trueBody":{"id":660,"nodeType":"Block","src":"4127:69:5","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":657,"name":"ArtNightRaffle__RaffleNotInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"4148:35:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4148:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"RevertStatement","src":"4141:44:5"}]}},{"expression":{"id":662,"name":"s_winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"4212:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":654,"id":663,"nodeType":"Return","src":"4205:15:5"}]},"functionSelector":"8e7ea5b2","id":665,"implemented":true,"kind":"function","modifiers":[],"name":"getWinner","nameLocation":"4049:9:5","nodeType":"FunctionDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[],"src":"4058:2:5"},"returnParameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":665,"src":"4084:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"4084:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4083:9:5"},"scope":725,"src":"4040:187:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":672,"nodeType":"Block","src":"4291:41:5","statements":[{"expression":{"id":670,"name":"s_raffleCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"4308:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":669,"id":671,"nodeType":"Return","src":"4301:24:5"}]},"functionSelector":"0c08b8b3","id":673,"implemented":true,"kind":"function","modifiers":[],"name":"isRaffleCompleted","nameLocation":"4242:17:5","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"4259:2:5"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":673,"src":"4285:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":667,"name":"bool","nodeType":"ElementaryTypeName","src":"4285:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4284:6:5"},"scope":725,"src":"4233:99:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":680,"nodeType":"Block","src":"4397:42:5","statements":[{"expression":{"id":678,"name":"s_raffleInProgress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4414:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":677,"id":679,"nodeType":"Return","src":"4407:25:5"}]},"functionSelector":"a0930ea2","id":681,"implemented":true,"kind":"function","modifiers":[],"name":"isRaffleInProgress","nameLocation":"4347:18:5","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"4365:2:5"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":681,"src":"4391:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":675,"name":"bool","nodeType":"ElementaryTypeName","src":"4391:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4390:6:5"},"scope":725,"src":"4338:101:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":688,"nodeType":"Block","src":"4505:39:5","statements":[{"expression":{"id":686,"name":"s_lastRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"4522:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":685,"id":687,"nodeType":"Return","src":"4515:22:5"}]},"functionSelector":"19c2b4c3","id":689,"implemented":true,"kind":"function","modifiers":[],"name":"getLastRequestId","nameLocation":"4454:16:5","nodeType":"FunctionDefinition","parameters":{"id":682,"nodeType":"ParameterList","parameters":[],"src":"4470:2:5"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":684,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":689,"src":"4496:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4496:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4495:9:5"},"scope":725,"src":"4445:99:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":699,"nodeType":"Block","src":"4644:49:5","statements":[{"expression":{"arguments":[{"id":696,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"4669:16:5","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}],"id":695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4661:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"4661:7:5","typeDescriptions":{}}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":693,"id":698,"nodeType":"Return","src":"4654:32:5"}]},"functionSelector":"0cb4a29d","id":700,"implemented":true,"kind":"function","modifiers":[],"name":"getVrfCoordinator","nameLocation":"4592:17:5","nodeType":"FunctionDefinition","parameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"4609:2:5"},"returnParameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":700,"src":"4635:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"4635:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4634:9:5"},"scope":725,"src":"4583:110:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":707,"nodeType":"Block","src":"4759:40:5","statements":[{"expression":{"id":705,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"4776:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":704,"id":706,"nodeType":"Return","src":"4769:23:5"}]},"functionSelector":"de3d9fb7","id":708,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscriptionId","nameLocation":"4708:17:5","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"4725:2:5"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":708,"src":"4751:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":702,"name":"uint64","nodeType":"ElementaryTypeName","src":"4751:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4750:8:5"},"scope":725,"src":"4699:100:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":715,"nodeType":"Block","src":"4859:33:5","statements":[{"expression":{"id":713,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"4876:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":712,"id":714,"nodeType":"Return","src":"4869:16:5"}]},"functionSelector":"c19dd76b","id":716,"implemented":true,"kind":"function","modifiers":[],"name":"getGasLane","nameLocation":"4814:10:5","nodeType":"FunctionDefinition","parameters":{"id":709,"nodeType":"ParameterList","parameters":[],"src":"4824:2:5"},"returnParameters":{"id":712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":711,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":716,"src":"4850:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4850:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4849:9:5"},"scope":725,"src":"4805:87:5","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":723,"nodeType":"Block","src":"4960:42:5","statements":[{"expression":{"id":721,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"4977:18:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":720,"id":722,"nodeType":"Return","src":"4970:25:5"}]},"functionSelector":"de8be8e7","id":724,"implemented":true,"kind":"function","modifiers":[],"name":"getCallbackGasLimit","nameLocation":"4907:19:5","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[],"src":"4926:2:5"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":724,"src":"4952:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":718,"name":"uint32","nodeType":"ElementaryTypeName","src":"4952:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4951:8:5"},"scope":725,"src":"4898:104:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":726,"src":"437:4567:5","usedErrors":[8,167,172,345,458,460,462,464,466],"usedEvents":[178,444,448,452,456]}],"src":"32:4973:5"},"id":5}},"contracts":{"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"contracts/ArtNightRaffle.sol":{"ArtNightRaffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ArtNightRaffle__InvalidTicketArray","type":"error"},{"inputs":[],"name":"ArtNightRaffle__NoTicketsSet","type":"error"},{"inputs":[],"name":"ArtNightRaffle__RaffleAlreadyCompleted","type":"error"},{"inputs":[],"name":"ArtNightRaffle__RaffleAlreadyInProgress","type":"error"},{"inputs":[],"name":"ArtNightRaffle__RaffleNotInProgress","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"winner","type":"uint256"}],"name":"RaffleCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RaffleStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"tickets","type":"uint256[]"}],"name":"RaffleTicketsSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"winner","type":"uint256"}],"name":"WinnerSelected","type":"event"},{"inputs":[],"name":"getCallbackGasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasLane","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastRequestId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleTickets","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSubscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVrfCoordinator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWinner","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRaffleCompleted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isRaffleInProgress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tickets","type":"uint256[]"}],"name":"setRaffleTickets","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startRaffle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_204":{"entryPoint":null,"id":204,"parameterSlots":1,"returnSlots":0},"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_353":{"entryPoint":null,"id":353,"parameterSlots":0,"returnSlots":0},"@_503":{"entryPoint":null,"id":503,"parameterSlots":4,"returnSlots":0},"@_transferOwnership_300":{"entryPoint":159,"id":300,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32_fromMemory":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":4},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:914:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"144:560:6","statements":[{"body":{"nodeType":"YulBlock","src":"191:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"200:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"203:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"193:6:6"},"nodeType":"YulFunctionCall","src":"193:12:6"},"nodeType":"YulExpressionStatement","src":"193:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"165:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"174:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"161:3:6"},"nodeType":"YulFunctionCall","src":"161:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"186:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"157:3:6"},"nodeType":"YulFunctionCall","src":"157:33:6"},"nodeType":"YulIf","src":"154:53:6"},{"nodeType":"YulVariableDeclaration","src":"216:29:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"235:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"229:5:6"},"nodeType":"YulFunctionCall","src":"229:16:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"220:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"308:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:6"},"nodeType":"YulFunctionCall","src":"310:12:6"},"nodeType":"YulExpressionStatement","src":"310:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"267:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"278:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"293:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"298:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"289:3:6"},"nodeType":"YulFunctionCall","src":"289:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"302:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"285:3:6"},"nodeType":"YulFunctionCall","src":"285:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"274:3:6"},"nodeType":"YulFunctionCall","src":"274:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"264:2:6"},"nodeType":"YulFunctionCall","src":"264:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"257:6:6"},"nodeType":"YulFunctionCall","src":"257:50:6"},"nodeType":"YulIf","src":"254:70:6"},{"nodeType":"YulAssignment","src":"333:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"343:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"333:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"357:40:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"382:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"393:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"378:3:6"},"nodeType":"YulFunctionCall","src":"378:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"372:5:6"},"nodeType":"YulFunctionCall","src":"372:25:6"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"361:7:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"463:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"472:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"475:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"465:6:6"},"nodeType":"YulFunctionCall","src":"465:12:6"},"nodeType":"YulExpressionStatement","src":"465:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"419:7:6"},{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"432:7:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"449:2:6","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"453:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"445:3:6"},"nodeType":"YulFunctionCall","src":"445:10:6"},{"kind":"number","nodeType":"YulLiteral","src":"457:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"441:3:6"},"nodeType":"YulFunctionCall","src":"441:18:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"428:3:6"},"nodeType":"YulFunctionCall","src":"428:32:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"416:2:6"},"nodeType":"YulFunctionCall","src":"416:45:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"409:6:6"},"nodeType":"YulFunctionCall","src":"409:53:6"},"nodeType":"YulIf","src":"406:73:6"},{"nodeType":"YulAssignment","src":"488:17:6","value":{"name":"value_1","nodeType":"YulIdentifier","src":"498:7:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"488:6:6"}]},{"nodeType":"YulAssignment","src":"514:35:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"545:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"530:3:6"},"nodeType":"YulFunctionCall","src":"530:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"524:5:6"},"nodeType":"YulFunctionCall","src":"524:25:6"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"514:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"558:40:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"583:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"594:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"579:3:6"},"nodeType":"YulFunctionCall","src":"579:18:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"573:5:6"},"nodeType":"YulFunctionCall","src":"573:25:6"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"562:7:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"656:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"665:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"668:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"658:6:6"},"nodeType":"YulFunctionCall","src":"658:12:6"},"nodeType":"YulExpressionStatement","src":"658:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"620:7:6"},{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"633:7:6"},{"kind":"number","nodeType":"YulLiteral","src":"642:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"629:3:6"},"nodeType":"YulFunctionCall","src":"629:24:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"617:2:6"},"nodeType":"YulFunctionCall","src":"617:37:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"610:6:6"},"nodeType":"YulFunctionCall","src":"610:45:6"},"nodeType":"YulIf","src":"607:65:6"},{"nodeType":"YulAssignment","src":"681:17:6","value":{"name":"value_2","nodeType":"YulIdentifier","src":"691:7:6"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"681:6:6"}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"86:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"97:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"109:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"117:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"125:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"133:6:6","type":""}],"src":"14:690:6"},{"body":{"nodeType":"YulBlock","src":"810:102:6","statements":[{"nodeType":"YulAssignment","src":"820:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"832:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"843:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"828:3:6"},"nodeType":"YulFunctionCall","src":"828:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"820:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"862:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"877:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"893:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"898:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"889:3:6"},"nodeType":"YulFunctionCall","src":"889:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"902:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"885:3:6"},"nodeType":"YulFunctionCall","src":"885:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"873:3:6"},"nodeType":"YulFunctionCall","src":"873:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"855:6:6"},"nodeType":"YulFunctionCall","src":"855:51:6"},"nodeType":"YulExpressionStatement","src":"855:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"779:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"790:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"801:4:6","type":""}],"src":"709:203:6"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, sub(shl(64, 1), 1)))) { revert(0, 0) }\n        value1 := value_1\n        value2 := mload(add(headStart, 64))\n        let value_2 := mload(add(headStart, 96))\n        if iszero(eq(value_2, and(value_2, 0xffffffff))) { revert(0, 0) }\n        value3 := value_2\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"61012060405234801561001157600080fd5b50604051610c5b380380610c5b833981016040819052610030916100ef565b6001600160a01b038416608052338061006357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61006c8161009f565b50600180556001600160a01b0390931660a0526001600160401b0390911660c05260e05263ffffffff1661010052610165565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121561010557600080fd5b84516001600160a01b038116811461011c57600080fd5b60208601519094506001600160401b038116811461013957600080fd5b60408601516060870151919450925063ffffffff8116811461015a57600080fd5b939692955090935050565b60805160a05160c05160e05161010051610a8f6101cc6000396000818161024001526104070152600081816101da01526103a801526000818161020c01526103d0015260008181610118015261044501526000818161028801526102ca0152610a8f6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063868c55c611610097578063c19dd76b11610066578063c19dd76b146101d8578063de3d9fb7146101fe578063de8be8e714610236578063f2fde38b1461026a57600080fd5b8063868c55c61461019c5780638da5cb5b146101af5780638e7ea5b2146101c0578063a0930ea2146101c857600080fd5b80631fe543e3116100d35780631fe543e314610162578063242284f1146101775780635a3e2dac1461017f578063715018a61461019457600080fd5b80630c08b8b3146100fa5780630cb4a29d1461011657806319c2b4c314610150575b600080fd5b60045460ff165b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161010d565b6005545b60405190815260200161010d565b610175610170366004610910565b61027d565b005b61017561030a565b6101876104f9565b60405161010d9190610957565b610175610551565b6101756101aa36600461099b565b610563565b6000546001600160a01b0316610138565b6101546105ff565b600454610100900460ff16610101565b7f0000000000000000000000000000000000000000000000000000000000000000610154565b60405167ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010d565b60405163ffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010d565b6101756102783660046109d8565b61062c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102fc5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b610306828261066a565b5050565b610312610758565b61031a610785565b60025460000361033d57604051635102f97d60e11b815260040160405180910390fd5b600454610100900460ff1615610366576040516386b8bc0160e01b815260040160405180910390fd5b60045460ff161561038a5760405163f48e316360e01b815260040160405180910390fd5b6004805461ff0019166101001781556040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166024820152600360448201527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166064820152600160848201526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a4016020604051808303816000875af115801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190610a08565b60058190556040518181529091507fe23fdee573320f133dc10284dcb988d5c782f07ec7b6b01d7ffbc6d537b2a4219060200160405180910390a1506104f760018055565b565b6060600280548060200260200160405190810160405280929190818152602001828054801561054757602002820191906000526020600020905b815481526020019060010190808311610533575b5050505050905090565b610559610758565b6104f760006107af565b61056b610758565b805160000361058d576040516334e75df760e21b815260040160405180910390fd5b60045460ff16156105b15760405163f48e316360e01b815260040160405180910390fd5b80516105c49060029060208401906107ff565b507f4b01001497a2ed98b9441e36ae22999a581260d42bbf2a48533efdaa74f29882816040516105f49190610957565b60405180910390a150565b60045460009060ff16610625576040516346afbe2560e11b815260040160405180910390fd5b5060035490565b610634610758565b6001600160a01b03811661065e57604051631e4fbdf760e01b8152600060048201526024016102f3565b610667816107af565b50565b6005548214610677575050565b60008160008151811061068c5761068c610a21565b602002602001015190506000600280549050826106a99190610a37565b9050600281815481106106be576106be610a21565b60009182526020909120015460038190556004805461ffff191660011790556040517f5b8029a9910b8fcad05daba83c75f73f39307c65c013cab42074f6a1d9cc4fb99161070f9190815260200190565b60405180910390a17f1e15dbf45ae533c182513b50c5b94530ab41942881a0bb1dc4206313d8b4115960035460405161074a91815260200190565b60405180910390a150505050565b6000546001600160a01b031633146104f75760405163118cdaa760e01b81523360048201526024016102f3565b6002600154036107a857604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561083a579160200282015b8281111561083a57825182559160200191906001019061081f565b5061084692915061084a565b5090565b5b80821115610846576000815560010161084b565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261088657600080fd5b8135602067ffffffffffffffff808311156108a3576108a361085f565b8260051b604051601f19603f830116810181811084821117156108c8576108c861085f565b6040529384528581018301938381019250878511156108e657600080fd5b83870191505b84821015610905578135835291830191908301906108ec565b979650505050505050565b6000806040838503121561092357600080fd5b82359150602083013567ffffffffffffffff81111561094157600080fd5b61094d85828601610875565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561098f57835183529284019291840191600101610973565b50909695505050505050565b6000602082840312156109ad57600080fd5b813567ffffffffffffffff8111156109c457600080fd5b6109d084828501610875565b949350505050565b6000602082840312156109ea57600080fd5b81356001600160a01b0381168114610a0157600080fd5b9392505050565b600060208284031215610a1a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600082610a5457634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212201cc9de715f21f71e8233e970db189fbd334fa71efe7c808abba4b317230661c564736f6c63430008140033","opcodes":"PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xC5B CODESIZE SUB DUP1 PUSH2 0xC5B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0xEF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x80 MSTORE CALLER DUP1 PUSH2 0x63 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6C DUP2 PUSH2 0x9F JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0xA0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND PUSH1 0xC0 MSTORE PUSH1 0xE0 MSTORE PUSH4 0xFFFFFFFF AND PUSH2 0x100 MSTORE PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0xA8F PUSH2 0x1CC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x240 ADD MSTORE PUSH2 0x407 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1DA ADD MSTORE PUSH2 0x3A8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x20C ADD MSTORE PUSH2 0x3D0 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x118 ADD MSTORE PUSH2 0x445 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x288 ADD MSTORE PUSH2 0x2CA ADD MSTORE PUSH2 0xA8F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x868C55C6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC19DD76B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC19DD76B EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDE8BE8E7 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x868C55C6 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA0930EA2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x242284F1 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x5A3E2DAC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC08B8B3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xCB4A29D EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x19C2B4C3 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x187 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x138 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x175 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x306 DUP3 DUP3 PUSH2 0x66A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SUB PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5102F97D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0x86B8BC01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF48E3163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0xE23FDEE573320F133DC10284DCB988D5C782F07EC7B6B01D7FFBC6D537B2A421 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x4F7 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x533 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x4F7 PUSH1 0x0 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x56B PUSH2 0x758 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH4 0x34E75DF7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF48E3163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x5C4 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x7FF JUMP JUMPDEST POP PUSH32 0x4B01001497A2ED98B9441E36AE22999A581260D42BBF2A48533EFDAA74F29882 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH4 0x46AFBE25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x634 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x7AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x677 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6BE JUMPI PUSH2 0x6BE PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5B8029A9910B8FCAD05DABA83C75F73F39307C65C013CAB42074F6A1D9CC4FB9 SWAP2 PUSH2 0x70F SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x1E15DBF45AE533C182513B50C5B94530AB41942881A0BB1DC4206313D8B41159 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x74A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x83A JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x83A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x81F JUMP JUMPDEST POP PUSH2 0x846 SWAP3 SWAP2 POP PUSH2 0x84A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x84B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0x85F JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x905 JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x8EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94D DUP6 DUP3 DUP7 ADD PUSH2 0x875 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x973 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D0 DUP5 DUP3 DUP6 ADD PUSH2 0x875 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC9 0xDE PUSH18 0x5F21F71E8233E970DB189FBD334FA71EFE7C DUP1 DUP11 0xBB LOG4 0xB3 OR 0x23 MOD PUSH2 0xC564 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"437:4567:5:-:0;;;1505:395;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5683:32:0;;;;1690:10:5;;1269:95:2;;1322:31;;-1:-1:-1;;;1322:31:2;;1350:1;1322:31;;;855:51:6;828:18;;1322:31:2;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:4;2061:21;;-1:-1:-1;;;;;1712:62:5;;::::2;;::::0;-1:-1:-1;;;;;1784:33:5;;::::2;;::::0;1827:19:::2;::::0;1856:37:::2;;;::::0;437:4567;;2912:187:2;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:690:6:-;109:6;117;125;133;186:3;174:9;165:7;161:23;157:33;154:53;;;203:1;200;193:12;154:53;229:16;;-1:-1:-1;;;;;274:31:6;;264:42;;254:70;;320:1;317;310:12;254:70;393:2;378:18;;372:25;343:5;;-1:-1:-1;;;;;;428:32:6;;416:45;;406:73;;475:1;472;465:12;406:73;545:2;530:18;;524:25;594:2;579:18;;573:25;498:7;;-1:-1:-1;524:25:6;-1:-1:-1;642:10:6;629:24;;617:37;;607:65;;668:1;665;658:12;607:65;14:690;;;;-1:-1:-1;14:690:6;;-1:-1:-1;;14:690:6:o;709:203::-;437:4567:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_238":{"entryPoint":1880,"id":238,"parameterSlots":0,"returnSlots":0},"@_msgSender_313":{"entryPoint":null,"id":313,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_388":{"entryPoint":null,"id":388,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_380":{"entryPoint":1925,"id":380,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_300":{"entryPoint":1967,"id":300,"parameterSlots":1,"returnSlots":0},"@fulfillRandomWords_641":{"entryPoint":1642,"id":641,"parameterSlots":2,"returnSlots":0},"@getCallbackGasLimit_724":{"entryPoint":null,"id":724,"parameterSlots":0,"returnSlots":1},"@getGasLane_716":{"entryPoint":null,"id":716,"parameterSlots":0,"returnSlots":1},"@getLastRequestId_689":{"entryPoint":null,"id":689,"parameterSlots":0,"returnSlots":1},"@getRaffleTickets_650":{"entryPoint":1273,"id":650,"parameterSlots":0,"returnSlots":1},"@getSubscriptionId_708":{"entryPoint":null,"id":708,"parameterSlots":0,"returnSlots":1},"@getVrfCoordinator_700":{"entryPoint":null,"id":700,"parameterSlots":0,"returnSlots":1},"@getWinner_665":{"entryPoint":1535,"id":665,"parameterSlots":0,"returnSlots":1},"@isRaffleCompleted_673":{"entryPoint":null,"id":673,"parameterSlots":0,"returnSlots":1},"@isRaffleInProgress_681":{"entryPoint":null,"id":681,"parameterSlots":0,"returnSlots":1},"@owner_221":{"entryPoint":null,"id":221,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":637,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_252":{"entryPoint":1361,"id":252,"parameterSlots":0,"returnSlots":0},"@setRaffleTickets_536":{"entryPoint":1379,"id":536,"parameterSlots":1,"returnSlots":0},"@startRaffle_589":{"entryPoint":778,"id":589,"parameterSlots":0,"returnSlots":0},"@transferOwnership_280":{"entryPoint":1580,"id":280,"parameterSlots":1,"returnSlots":0},"abi_decode_array_uint256_dyn":{"entryPoint":2165,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2520,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2459,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":2568,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":2320,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":2391,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mod_t_uint256":{"entryPoint":2615,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x32":{"entryPoint":2593,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":2143,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5307:6","statements":[{"nodeType":"YulBlock","src":"6:3:6","statements":[]},{"body":{"nodeType":"YulBlock","src":"109:92:6","statements":[{"nodeType":"YulAssignment","src":"119:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"131:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"142:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"127:3:6"},"nodeType":"YulFunctionCall","src":"127:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"119:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"161:9:6"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"186:6:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"179:6:6"},"nodeType":"YulFunctionCall","src":"179:14:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"172:6:6"},"nodeType":"YulFunctionCall","src":"172:22:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"154:6:6"},"nodeType":"YulFunctionCall","src":"154:41:6"},"nodeType":"YulExpressionStatement","src":"154:41:6"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"78:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"89:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"100:4:6","type":""}],"src":"14:187:6"},{"body":{"nodeType":"YulBlock","src":"307:102:6","statements":[{"nodeType":"YulAssignment","src":"317:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"329:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"340:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"325:3:6"},"nodeType":"YulFunctionCall","src":"325:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"317:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"359:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"374:6:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"390:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"395:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"386:3:6"},"nodeType":"YulFunctionCall","src":"386:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"399:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"382:3:6"},"nodeType":"YulFunctionCall","src":"382:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"370:3:6"},"nodeType":"YulFunctionCall","src":"370:32:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"352:6:6"},"nodeType":"YulFunctionCall","src":"352:51:6"},"nodeType":"YulExpressionStatement","src":"352:51:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"276:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"287:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"298:4:6","type":""}],"src":"206:203:6"},{"body":{"nodeType":"YulBlock","src":"515:76:6","statements":[{"nodeType":"YulAssignment","src":"525:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"537:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"548:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"533:3:6"},"nodeType":"YulFunctionCall","src":"533:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"525:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"567:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"578:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"560:6:6"},"nodeType":"YulFunctionCall","src":"560:25:6"},"nodeType":"YulExpressionStatement","src":"560:25:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"484:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"495:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"506:4:6","type":""}],"src":"414:177:6"},{"body":{"nodeType":"YulBlock","src":"628:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"645:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"652:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"657:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"648:3:6"},"nodeType":"YulFunctionCall","src":"648:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"638:6:6"},"nodeType":"YulFunctionCall","src":"638:31:6"},"nodeType":"YulExpressionStatement","src":"638:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"685:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"688:4:6","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"678:6:6"},"nodeType":"YulFunctionCall","src":"678:15:6"},"nodeType":"YulExpressionStatement","src":"678:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"709:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"712:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"702:6:6"},"nodeType":"YulFunctionCall","src":"702:15:6"},"nodeType":"YulExpressionStatement","src":"702:15:6"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"596:127:6"},{"body":{"nodeType":"YulBlock","src":"792:838:6","statements":[{"body":{"nodeType":"YulBlock","src":"841:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"850:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"853:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"843:6:6"},"nodeType":"YulFunctionCall","src":"843:12:6"},"nodeType":"YulExpressionStatement","src":"843:12:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"820:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"828:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"816:3:6"},"nodeType":"YulFunctionCall","src":"816:17:6"},{"name":"end","nodeType":"YulIdentifier","src":"835:3:6"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"812:3:6"},"nodeType":"YulFunctionCall","src":"812:27:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"805:6:6"},"nodeType":"YulFunctionCall","src":"805:35:6"},"nodeType":"YulIf","src":"802:55:6"},{"nodeType":"YulVariableDeclaration","src":"866:30:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"889:6:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"876:12:6"},"nodeType":"YulFunctionCall","src":"876:20:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"870:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"905:14:6","value":{"kind":"number","nodeType":"YulLiteral","src":"915:4:6","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"909:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"928:28:6","value":{"kind":"number","nodeType":"YulLiteral","src":"938:18:6","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"932:2:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"979:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"981:16:6"},"nodeType":"YulFunctionCall","src":"981:18:6"},"nodeType":"YulExpressionStatement","src":"981:18:6"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"971:2:6"},{"name":"_3","nodeType":"YulIdentifier","src":"975:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"968:2:6"},"nodeType":"YulFunctionCall","src":"968:10:6"},"nodeType":"YulIf","src":"965:36:6"},{"nodeType":"YulVariableDeclaration","src":"1010:20:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1024:1:6","type":"","value":"5"},{"name":"_1","nodeType":"YulIdentifier","src":"1027:2:6"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1020:3:6"},"nodeType":"YulFunctionCall","src":"1020:10:6"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1014:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1039:23:6","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1053:5:6"},"nodeType":"YulFunctionCall","src":"1053:9:6"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1043:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1071:56:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1093:6:6"},{"arguments":[{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1109:2:6"},{"kind":"number","nodeType":"YulLiteral","src":"1113:2:6","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1105:3:6"},"nodeType":"YulFunctionCall","src":"1105:11:6"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1122:2:6","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1118:3:6"},"nodeType":"YulFunctionCall","src":"1118:7:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1101:3:6"},"nodeType":"YulFunctionCall","src":"1101:25:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1089:3:6"},"nodeType":"YulFunctionCall","src":"1089:38:6"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1075:10:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1186:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1188:16:6"},"nodeType":"YulFunctionCall","src":"1188:18:6"},"nodeType":"YulExpressionStatement","src":"1188:18:6"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1145:10:6"},{"name":"_3","nodeType":"YulIdentifier","src":"1157:2:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1142:2:6"},"nodeType":"YulFunctionCall","src":"1142:18:6"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1165:10:6"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1177:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1162:2:6"},"nodeType":"YulFunctionCall","src":"1162:22:6"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1139:2:6"},"nodeType":"YulFunctionCall","src":"1139:46:6"},"nodeType":"YulIf","src":"1136:72:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1224:2:6","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1228:10:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1217:6:6"},"nodeType":"YulFunctionCall","src":"1217:22:6"},"nodeType":"YulExpressionStatement","src":"1217:22:6"},{"nodeType":"YulVariableDeclaration","src":"1248:17:6","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1259:6:6"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"1252:3:6","type":""}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1281:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"1289:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1274:6:6"},"nodeType":"YulFunctionCall","src":"1274:18:6"},"nodeType":"YulExpressionStatement","src":"1274:18:6"},{"nodeType":"YulAssignment","src":"1301:22:6","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1312:6:6"},{"name":"_2","nodeType":"YulIdentifier","src":"1320:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1308:3:6"},"nodeType":"YulFunctionCall","src":"1308:15:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1301:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"1332:38:6","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1354:6:6"},{"name":"_4","nodeType":"YulIdentifier","src":"1362:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:6"},"nodeType":"YulFunctionCall","src":"1350:15:6"},{"name":"_2","nodeType":"YulIdentifier","src":"1367:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1346:3:6"},"nodeType":"YulFunctionCall","src":"1346:24:6"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"1336:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1398:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1407:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1410:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1400:6:6"},"nodeType":"YulFunctionCall","src":"1400:12:6"},"nodeType":"YulExpressionStatement","src":"1400:12:6"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"1385:6:6"},{"name":"end","nodeType":"YulIdentifier","src":"1393:3:6"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1382:2:6"},"nodeType":"YulFunctionCall","src":"1382:15:6"},"nodeType":"YulIf","src":"1379:35:6"},{"nodeType":"YulVariableDeclaration","src":"1423:26:6","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1438:6:6"},{"name":"_2","nodeType":"YulIdentifier","src":"1446:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1434:3:6"},"nodeType":"YulFunctionCall","src":"1434:15:6"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"1427:3:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1514:86:6","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1535:3:6"},{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1553:3:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1540:12:6"},"nodeType":"YulFunctionCall","src":"1540:17:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1528:6:6"},"nodeType":"YulFunctionCall","src":"1528:30:6"},"nodeType":"YulExpressionStatement","src":"1528:30:6"},{"nodeType":"YulAssignment","src":"1571:19:6","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1582:3:6"},{"name":"_2","nodeType":"YulIdentifier","src":"1587:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1578:3:6"},"nodeType":"YulFunctionCall","src":"1578:12:6"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"1571:3:6"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1469:3:6"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"1474:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1466:2:6"},"nodeType":"YulFunctionCall","src":"1466:15:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1482:23:6","statements":[{"nodeType":"YulAssignment","src":"1484:19:6","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1495:3:6"},{"name":"_2","nodeType":"YulIdentifier","src":"1500:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1491:3:6"},"nodeType":"YulFunctionCall","src":"1491:12:6"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"1484:3:6"}]}]},"pre":{"nodeType":"YulBlock","src":"1462:3:6","statements":[]},"src":"1458:142:6"},{"nodeType":"YulAssignment","src":"1609:15:6","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1618:6:6"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1609:5:6"}]}]},"name":"abi_decode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"766:6:6","type":""},{"name":"end","nodeType":"YulTypedName","src":"774:3:6","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"782:5:6","type":""}],"src":"728:902:6"},{"body":{"nodeType":"YulBlock","src":"1747:304:6","statements":[{"body":{"nodeType":"YulBlock","src":"1793:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1802:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1805:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1795:6:6"},"nodeType":"YulFunctionCall","src":"1795:12:6"},"nodeType":"YulExpressionStatement","src":"1795:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1768:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"1777:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1764:3:6"},"nodeType":"YulFunctionCall","src":"1764:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"1789:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1760:3:6"},"nodeType":"YulFunctionCall","src":"1760:32:6"},"nodeType":"YulIf","src":"1757:52:6"},{"nodeType":"YulAssignment","src":"1818:33:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1841:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1828:12:6"},"nodeType":"YulFunctionCall","src":"1828:23:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1818:6:6"}]},{"nodeType":"YulVariableDeclaration","src":"1860:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1891:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"1902:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1887:3:6"},"nodeType":"YulFunctionCall","src":"1887:18:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1874:12:6"},"nodeType":"YulFunctionCall","src":"1874:32:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1864:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"1949:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1958:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1961:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1951:6:6"},"nodeType":"YulFunctionCall","src":"1951:12:6"},"nodeType":"YulExpressionStatement","src":"1951:12:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1921:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"1929:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1918:2:6"},"nodeType":"YulFunctionCall","src":"1918:30:6"},"nodeType":"YulIf","src":"1915:50:6"},{"nodeType":"YulAssignment","src":"1974:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2017:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"2028:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2013:3:6"},"nodeType":"YulFunctionCall","src":"2013:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2037:7:6"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"1984:28:6"},"nodeType":"YulFunctionCall","src":"1984:61:6"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1974:6:6"}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1705:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1716:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1728:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1736:6:6","type":""}],"src":"1635:416:6"},{"body":{"nodeType":"YulBlock","src":"2207:481:6","statements":[{"nodeType":"YulVariableDeclaration","src":"2217:12:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2227:2:6","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2221:2:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2238:32:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2256:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2267:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2252:3:6"},"nodeType":"YulFunctionCall","src":"2252:18:6"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"2242:6:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2286:9:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2297:2:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2279:6:6"},"nodeType":"YulFunctionCall","src":"2279:21:6"},"nodeType":"YulExpressionStatement","src":"2279:21:6"},{"nodeType":"YulVariableDeclaration","src":"2309:17:6","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"2320:6:6"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"2313:3:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2335:27:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2355:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2349:5:6"},"nodeType":"YulFunctionCall","src":"2349:13:6"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2339:6:6","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"2378:6:6"},{"name":"length","nodeType":"YulIdentifier","src":"2386:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2371:6:6"},"nodeType":"YulFunctionCall","src":"2371:22:6"},"nodeType":"YulExpressionStatement","src":"2371:22:6"},{"nodeType":"YulAssignment","src":"2402:25:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2413:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"2424:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2409:3:6"},"nodeType":"YulFunctionCall","src":"2409:18:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2402:3:6"}]},{"nodeType":"YulVariableDeclaration","src":"2436:29:6","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2454:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2462:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2450:3:6"},"nodeType":"YulFunctionCall","src":"2450:15:6"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2440:6:6","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2474:10:6","value":{"kind":"number","nodeType":"YulLiteral","src":"2483:1:6","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2478:1:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2542:120:6","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2563:3:6"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2574:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2568:5:6"},"nodeType":"YulFunctionCall","src":"2568:13:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2556:6:6"},"nodeType":"YulFunctionCall","src":"2556:26:6"},"nodeType":"YulExpressionStatement","src":"2556:26:6"},{"nodeType":"YulAssignment","src":"2595:19:6","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2606:3:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2611:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:6"},"nodeType":"YulFunctionCall","src":"2602:12:6"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2595:3:6"}]},{"nodeType":"YulAssignment","src":"2627:25:6","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2641:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"2649:2:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2637:3:6"},"nodeType":"YulFunctionCall","src":"2637:15:6"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2627:6:6"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2504:1:6"},{"name":"length","nodeType":"YulIdentifier","src":"2507:6:6"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2501:2:6"},"nodeType":"YulFunctionCall","src":"2501:13:6"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2515:18:6","statements":[{"nodeType":"YulAssignment","src":"2517:14:6","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2526:1:6"},{"kind":"number","nodeType":"YulLiteral","src":"2529:1:6","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2522:3:6"},"nodeType":"YulFunctionCall","src":"2522:9:6"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2517:1:6"}]}]},"pre":{"nodeType":"YulBlock","src":"2497:3:6","statements":[]},"src":"2493:169:6"},{"nodeType":"YulAssignment","src":"2671:11:6","value":{"name":"pos","nodeType":"YulIdentifier","src":"2679:3:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2671:4:6"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2176:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2187:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2198:4:6","type":""}],"src":"2056:632:6"},{"body":{"nodeType":"YulBlock","src":"2788:253:6","statements":[{"body":{"nodeType":"YulBlock","src":"2834:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2843:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2846:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2836:6:6"},"nodeType":"YulFunctionCall","src":"2836:12:6"},"nodeType":"YulExpressionStatement","src":"2836:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2809:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"2818:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2805:3:6"},"nodeType":"YulFunctionCall","src":"2805:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"2830:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2801:3:6"},"nodeType":"YulFunctionCall","src":"2801:32:6"},"nodeType":"YulIf","src":"2798:52:6"},{"nodeType":"YulVariableDeclaration","src":"2859:37:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2886:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2873:12:6"},"nodeType":"YulFunctionCall","src":"2873:23:6"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2863:6:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"2939:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2941:6:6"},"nodeType":"YulFunctionCall","src":"2941:12:6"},"nodeType":"YulExpressionStatement","src":"2941:12:6"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2911:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"2919:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2908:2:6"},"nodeType":"YulFunctionCall","src":"2908:30:6"},"nodeType":"YulIf","src":"2905:50:6"},{"nodeType":"YulAssignment","src":"2964:71:6","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3007:9:6"},{"name":"offset","nodeType":"YulIdentifier","src":"3018:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3003:3:6"},"nodeType":"YulFunctionCall","src":"3003:22:6"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3027:7:6"}],"functionName":{"name":"abi_decode_array_uint256_dyn","nodeType":"YulIdentifier","src":"2974:28:6"},"nodeType":"YulFunctionCall","src":"2974:61:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2964:6:6"}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2754:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2765:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2777:6:6","type":""}],"src":"2693:348:6"},{"body":{"nodeType":"YulBlock","src":"3147:76:6","statements":[{"nodeType":"YulAssignment","src":"3157:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3169:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3180:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3165:3:6"},"nodeType":"YulFunctionCall","src":"3165:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3157:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3199:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"3210:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3192:6:6"},"nodeType":"YulFunctionCall","src":"3192:25:6"},"nodeType":"YulExpressionStatement","src":"3192:25:6"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3116:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3127:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3138:4:6","type":""}],"src":"3046:177:6"},{"body":{"nodeType":"YulBlock","src":"3327:101:6","statements":[{"nodeType":"YulAssignment","src":"3337:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3349:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3360:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3345:3:6"},"nodeType":"YulFunctionCall","src":"3345:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3337:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3379:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3394:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3402:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3390:3:6"},"nodeType":"YulFunctionCall","src":"3390:31:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3372:6:6"},"nodeType":"YulFunctionCall","src":"3372:50:6"},"nodeType":"YulExpressionStatement","src":"3372:50:6"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3296:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3307:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3318:4:6","type":""}],"src":"3228:200:6"},{"body":{"nodeType":"YulBlock","src":"3532:93:6","statements":[{"nodeType":"YulAssignment","src":"3542:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3554:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"3565:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3550:3:6"},"nodeType":"YulFunctionCall","src":"3550:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3542:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3584:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3599:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"3607:10:6","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3595:3:6"},"nodeType":"YulFunctionCall","src":"3595:23:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3577:6:6"},"nodeType":"YulFunctionCall","src":"3577:42:6"},"nodeType":"YulExpressionStatement","src":"3577:42:6"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3501:9:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3512:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3523:4:6","type":""}],"src":"3433:192:6"},{"body":{"nodeType":"YulBlock","src":"3700:216:6","statements":[{"body":{"nodeType":"YulBlock","src":"3746:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3755:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3758:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3748:6:6"},"nodeType":"YulFunctionCall","src":"3748:12:6"},"nodeType":"YulExpressionStatement","src":"3748:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3721:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"3730:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3717:3:6"},"nodeType":"YulFunctionCall","src":"3717:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"3742:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3713:3:6"},"nodeType":"YulFunctionCall","src":"3713:32:6"},"nodeType":"YulIf","src":"3710:52:6"},{"nodeType":"YulVariableDeclaration","src":"3771:36:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3797:9:6"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3784:12:6"},"nodeType":"YulFunctionCall","src":"3784:23:6"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3775:5:6","type":""}]},{"body":{"nodeType":"YulBlock","src":"3870:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3879:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3882:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3872:6:6"},"nodeType":"YulFunctionCall","src":"3872:12:6"},"nodeType":"YulExpressionStatement","src":"3872:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3829:5:6"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3840:5:6"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3855:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3860:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3851:3:6"},"nodeType":"YulFunctionCall","src":"3851:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"3864:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3847:3:6"},"nodeType":"YulFunctionCall","src":"3847:19:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3836:3:6"},"nodeType":"YulFunctionCall","src":"3836:31:6"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3826:2:6"},"nodeType":"YulFunctionCall","src":"3826:42:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3819:6:6"},"nodeType":"YulFunctionCall","src":"3819:50:6"},"nodeType":"YulIf","src":"3816:70:6"},{"nodeType":"YulAssignment","src":"3895:15:6","value":{"name":"value","nodeType":"YulIdentifier","src":"3905:5:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3895:6:6"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3666:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3677:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3689:6:6","type":""}],"src":"3630:286:6"},{"body":{"nodeType":"YulBlock","src":"4050:175:6","statements":[{"nodeType":"YulAssignment","src":"4060:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4072:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4083:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4068:3:6"},"nodeType":"YulFunctionCall","src":"4068:18:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4060:4:6"}]},{"nodeType":"YulVariableDeclaration","src":"4095:29:6","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4113:3:6","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4118:1:6","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4109:3:6"},"nodeType":"YulFunctionCall","src":"4109:11:6"},{"kind":"number","nodeType":"YulLiteral","src":"4122:1:6","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4105:3:6"},"nodeType":"YulFunctionCall","src":"4105:19:6"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4099:2:6","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4140:9:6"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4155:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4163:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4151:3:6"},"nodeType":"YulFunctionCall","src":"4151:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4133:6:6"},"nodeType":"YulFunctionCall","src":"4133:34:6"},"nodeType":"YulExpressionStatement","src":"4133:34:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4187:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4198:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4183:3:6"},"nodeType":"YulFunctionCall","src":"4183:18:6"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4207:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4215:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4203:3:6"},"nodeType":"YulFunctionCall","src":"4203:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4176:6:6"},"nodeType":"YulFunctionCall","src":"4176:43:6"},"nodeType":"YulExpressionStatement","src":"4176:43:6"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4011:9:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4022:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4030:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4041:4:6","type":""}],"src":"3921:304:6"},{"body":{"nodeType":"YulBlock","src":"4435:335:6","statements":[{"nodeType":"YulAssignment","src":"4445:27:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4457:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4468:3:6","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4453:3:6"},"nodeType":"YulFunctionCall","src":"4453:19:6"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4445:4:6"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4488:9:6"},{"name":"value0","nodeType":"YulIdentifier","src":"4499:6:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4481:6:6"},"nodeType":"YulFunctionCall","src":"4481:25:6"},"nodeType":"YulExpressionStatement","src":"4481:25:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4526:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4537:2:6","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4522:3:6"},"nodeType":"YulFunctionCall","src":"4522:18:6"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4546:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4554:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4542:3:6"},"nodeType":"YulFunctionCall","src":"4542:31:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4515:6:6"},"nodeType":"YulFunctionCall","src":"4515:59:6"},"nodeType":"YulExpressionStatement","src":"4515:59:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4594:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4605:2:6","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4590:3:6"},"nodeType":"YulFunctionCall","src":"4590:18:6"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4614:6:6"},{"kind":"number","nodeType":"YulLiteral","src":"4622:6:6","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4610:3:6"},"nodeType":"YulFunctionCall","src":"4610:19:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4583:6:6"},"nodeType":"YulFunctionCall","src":"4583:47:6"},"nodeType":"YulExpressionStatement","src":"4583:47:6"},{"nodeType":"YulVariableDeclaration","src":"4639:20:6","value":{"kind":"number","nodeType":"YulLiteral","src":"4649:10:6","type":"","value":"0xffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4643:2:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4679:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4690:2:6","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4675:3:6"},"nodeType":"YulFunctionCall","src":"4675:18:6"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"4699:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4707:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4695:3:6"},"nodeType":"YulFunctionCall","src":"4695:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4668:6:6"},"nodeType":"YulFunctionCall","src":"4668:43:6"},"nodeType":"YulExpressionStatement","src":"4668:43:6"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4731:9:6"},{"kind":"number","nodeType":"YulLiteral","src":"4742:3:6","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4727:3:6"},"nodeType":"YulFunctionCall","src":"4727:19:6"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"4752:6:6"},{"name":"_1","nodeType":"YulIdentifier","src":"4760:2:6"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4748:3:6"},"nodeType":"YulFunctionCall","src":"4748:15:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4720:6:6"},"nodeType":"YulFunctionCall","src":"4720:44:6"},"nodeType":"YulExpressionStatement","src":"4720:44:6"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4372:9:6","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4383:6:6","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4391:6:6","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4399:6:6","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4407:6:6","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4415:6:6","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4426:4:6","type":""}],"src":"4230:540:6"},{"body":{"nodeType":"YulBlock","src":"4856:103:6","statements":[{"body":{"nodeType":"YulBlock","src":"4902:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4911:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4914:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4904:6:6"},"nodeType":"YulFunctionCall","src":"4904:12:6"},"nodeType":"YulExpressionStatement","src":"4904:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4877:7:6"},{"name":"headStart","nodeType":"YulIdentifier","src":"4886:9:6"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4873:3:6"},"nodeType":"YulFunctionCall","src":"4873:23:6"},{"kind":"number","nodeType":"YulLiteral","src":"4898:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4869:3:6"},"nodeType":"YulFunctionCall","src":"4869:32:6"},"nodeType":"YulIf","src":"4866:52:6"},{"nodeType":"YulAssignment","src":"4927:26:6","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4943:9:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4937:5:6"},"nodeType":"YulFunctionCall","src":"4937:16:6"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4927:6:6"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4822:9:6","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4833:7:6","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4845:6:6","type":""}],"src":"4775:184:6"},{"body":{"nodeType":"YulBlock","src":"4996:95:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5013:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5020:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5025:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5016:3:6"},"nodeType":"YulFunctionCall","src":"5016:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5006:6:6"},"nodeType":"YulFunctionCall","src":"5006:31:6"},"nodeType":"YulExpressionStatement","src":"5006:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5053:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5056:4:6","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5046:6:6"},"nodeType":"YulFunctionCall","src":"5046:15:6"},"nodeType":"YulExpressionStatement","src":"5046:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5077:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5080:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5070:6:6"},"nodeType":"YulFunctionCall","src":"5070:15:6"},"nodeType":"YulExpressionStatement","src":"5070:15:6"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"4964:127:6"},{"body":{"nodeType":"YulBlock","src":"5134:171:6","statements":[{"body":{"nodeType":"YulBlock","src":"5165:111:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5186:1:6","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5193:3:6","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"5198:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5189:3:6"},"nodeType":"YulFunctionCall","src":"5189:20:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5179:6:6"},"nodeType":"YulFunctionCall","src":"5179:31:6"},"nodeType":"YulExpressionStatement","src":"5179:31:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5230:1:6","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5233:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5223:6:6"},"nodeType":"YulFunctionCall","src":"5223:15:6"},"nodeType":"YulExpressionStatement","src":"5223:15:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5258:1:6","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5251:6:6"},"nodeType":"YulFunctionCall","src":"5251:15:6"},"nodeType":"YulExpressionStatement","src":"5251:15:6"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5154:1:6"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5147:6:6"},"nodeType":"YulFunctionCall","src":"5147:9:6"},"nodeType":"YulIf","src":"5144:132:6"},{"nodeType":"YulAssignment","src":"5285:14:6","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5294:1:6"},{"name":"y","nodeType":"YulIdentifier","src":"5297:1:6"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"5290:3:6"},"nodeType":"YulFunctionCall","src":"5290:9:6"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5285:1:6"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5119:1:6","type":""},{"name":"y","nodeType":"YulTypedName","src":"5122:1:6","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"5128:1:6","type":""}],"src":"5096:209:6"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { panic_error_0x41() }\n        let _4 := shl(5, _1)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_4, 63), not(31)))\n        if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, _4), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffff))\n        let _1 := 0xffffffff\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n}","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":648},{"length":32,"start":714}],"416":[{"length":32,"start":280},{"length":32,"start":1093}],"418":[{"length":32,"start":524},{"length":32,"start":976}],"420":[{"length":32,"start":474},{"length":32,"start":936}],"422":[{"length":32,"start":576},{"length":32,"start":1031}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c8063868c55c611610097578063c19dd76b11610066578063c19dd76b146101d8578063de3d9fb7146101fe578063de8be8e714610236578063f2fde38b1461026a57600080fd5b8063868c55c61461019c5780638da5cb5b146101af5780638e7ea5b2146101c0578063a0930ea2146101c857600080fd5b80631fe543e3116100d35780631fe543e314610162578063242284f1146101775780635a3e2dac1461017f578063715018a61461019457600080fd5b80630c08b8b3146100fa5780630cb4a29d1461011657806319c2b4c314610150575b600080fd5b60045460ff165b60405190151581526020015b60405180910390f35b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b03909116815260200161010d565b6005545b60405190815260200161010d565b610175610170366004610910565b61027d565b005b61017561030a565b6101876104f9565b60405161010d9190610957565b610175610551565b6101756101aa36600461099b565b610563565b6000546001600160a01b0316610138565b6101546105ff565b600454610100900460ff16610101565b7f0000000000000000000000000000000000000000000000000000000000000000610154565b60405167ffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010d565b60405163ffffffff7f000000000000000000000000000000000000000000000000000000000000000016815260200161010d565b6101756102783660046109d8565b61062c565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102fc5760405163073e64fd60e21b81523360048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660248201526044015b60405180910390fd5b610306828261066a565b5050565b610312610758565b61031a610785565b60025460000361033d57604051635102f97d60e11b815260040160405180910390fd5b600454610100900460ff1615610366576040516386b8bc0160e01b815260040160405180910390fd5b60045460ff161561038a5760405163f48e316360e01b815260040160405180910390fd5b6004805461ff0019166101001781556040516305d3b1d360e41b81527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000067ffffffffffffffff166024820152600360448201527f000000000000000000000000000000000000000000000000000000000000000063ffffffff166064820152600160848201526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635d3b1d309060a4016020604051808303816000875af115801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190610a08565b60058190556040518181529091507fe23fdee573320f133dc10284dcb988d5c782f07ec7b6b01d7ffbc6d537b2a4219060200160405180910390a1506104f760018055565b565b6060600280548060200260200160405190810160405280929190818152602001828054801561054757602002820191906000526020600020905b815481526020019060010190808311610533575b5050505050905090565b610559610758565b6104f760006107af565b61056b610758565b805160000361058d576040516334e75df760e21b815260040160405180910390fd5b60045460ff16156105b15760405163f48e316360e01b815260040160405180910390fd5b80516105c49060029060208401906107ff565b507f4b01001497a2ed98b9441e36ae22999a581260d42bbf2a48533efdaa74f29882816040516105f49190610957565b60405180910390a150565b60045460009060ff16610625576040516346afbe2560e11b815260040160405180910390fd5b5060035490565b610634610758565b6001600160a01b03811661065e57604051631e4fbdf760e01b8152600060048201526024016102f3565b610667816107af565b50565b6005548214610677575050565b60008160008151811061068c5761068c610a21565b602002602001015190506000600280549050826106a99190610a37565b9050600281815481106106be576106be610a21565b60009182526020909120015460038190556004805461ffff191660011790556040517f5b8029a9910b8fcad05daba83c75f73f39307c65c013cab42074f6a1d9cc4fb99161070f9190815260200190565b60405180910390a17f1e15dbf45ae533c182513b50c5b94530ab41942881a0bb1dc4206313d8b4115960035460405161074a91815260200190565b60405180910390a150505050565b6000546001600160a01b031633146104f75760405163118cdaa760e01b81523360048201526024016102f3565b6002600154036107a857604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090810192821561083a579160200282015b8281111561083a57825182559160200191906001019061081f565b5061084692915061084a565b5090565b5b80821115610846576000815560010161084b565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261088657600080fd5b8135602067ffffffffffffffff808311156108a3576108a361085f565b8260051b604051601f19603f830116810181811084821117156108c8576108c861085f565b6040529384528581018301938381019250878511156108e657600080fd5b83870191505b84821015610905578135835291830191908301906108ec565b979650505050505050565b6000806040838503121561092357600080fd5b82359150602083013567ffffffffffffffff81111561094157600080fd5b61094d85828601610875565b9150509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561098f57835183529284019291840191600101610973565b50909695505050505050565b6000602082840312156109ad57600080fd5b813567ffffffffffffffff8111156109c457600080fd5b6109d084828501610875565b949350505050565b6000602082840312156109ea57600080fd5b81356001600160a01b0381168114610a0157600080fd5b9392505050565b600060208284031215610a1a57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600082610a5457634e487b7160e01b600052601260045260246000fd5b50069056fea26469706673582212201cc9de715f21f71e8233e970db189fbd334fa71efe7c808abba4b317230661c564736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x868C55C6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC19DD76B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC19DD76B EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0xDE3D9FB7 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0xDE8BE8E7 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x868C55C6 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x8E7EA5B2 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0xA0930EA2 EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FE543E3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0x242284F1 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x5A3E2DAC EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC08B8B3 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xCB4A29D EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x19C2B4C3 EQ PUSH2 0x150 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x5 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x175 PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x30A JUMP JUMPDEST PUSH2 0x187 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x551 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1AA CALLDATASIZE PUSH1 0x4 PUSH2 0x99B JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x138 JUMP JUMPDEST PUSH2 0x154 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x154 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF PUSH32 0x0 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x175 PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x9D8 JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x73E64FD PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x306 DUP3 DUP3 PUSH2 0x66A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x31A PUSH2 0x785 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 SUB PUSH2 0x33D JUMPI PUSH1 0x40 MLOAD PUSH4 0x5102F97D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x366 JUMPI PUSH1 0x40 MLOAD PUSH4 0x86B8BC01 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH4 0xF48E3163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP2 MSTORE PUSH32 0x0 SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x0 PUSH4 0xFFFFFFFF AND PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x5D3B1D30 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0xE23FDEE573320F133DC10284DCB988D5C782F07EC7B6B01D7FFBC6D537B2A421 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x4F7 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x533 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x559 PUSH2 0x758 JUMP JUMPDEST PUSH2 0x4F7 PUSH1 0x0 PUSH2 0x7AF JUMP JUMPDEST PUSH2 0x56B PUSH2 0x758 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x58D JUMPI PUSH1 0x40 MLOAD PUSH4 0x34E75DF7 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x5B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF48E3163 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x5C4 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x7FF JUMP JUMPDEST POP PUSH32 0x4B01001497A2ED98B9441E36AE22999A581260D42BBF2A48533EFDAA74F29882 DUP2 PUSH1 0x40 MLOAD PUSH2 0x5F4 SWAP2 SWAP1 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH4 0x46AFBE25 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x634 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH2 0x667 DUP2 PUSH2 0x7AF JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 EQ PUSH2 0x677 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x68C JUMPI PUSH2 0x68C PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6BE JUMPI PUSH2 0x6BE PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5B8029A9910B8FCAD05DABA83C75F73F39307C65C013CAB42074F6A1D9CC4FB9 SWAP2 PUSH2 0x70F SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH32 0x1E15DBF45AE533C182513B50C5B94530AB41942881A0BB1DC4206313D8B41159 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x74A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x7A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x83A JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x83A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x81F JUMP JUMPDEST POP PUSH2 0x846 SWAP3 SWAP2 POP PUSH2 0x84A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x846 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x84B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x886 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0x85F JUMP JUMPDEST DUP3 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP5 DUP3 GT OR ISZERO PUSH2 0x8C8 JUMPI PUSH2 0x8C8 PUSH2 0x85F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP4 DUP5 MSTORE DUP6 DUP2 ADD DUP4 ADD SWAP4 DUP4 DUP2 ADD SWAP3 POP DUP8 DUP6 GT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP2 POP JUMPDEST DUP5 DUP3 LT ISZERO PUSH2 0x905 JUMPI DUP2 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x8EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x923 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x94D DUP6 DUP3 DUP7 ADD PUSH2 0x875 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x98F JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x973 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9D0 DUP5 DUP3 DUP6 ADD PUSH2 0x875 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA54 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xC9 0xDE PUSH18 0x5F21F71E8233E970DB189FBD334FA71EFE7C DUP1 DUP11 0xBB LOG4 0xB3 OR 0x23 MOD PUSH2 0xC564 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"437:4567:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4233:99;4308:17;;;;4233:99;;;179:14:6;;172:22;154:41;;142:2;127:18;4233:99:5;;;;;;;;4583:110;4669:16;4583:110;;;-1:-1:-1;;;;;370:32:6;;;352:51;;340:2;325:18;4583:110:5;206:203:6;4445:99:5;4522:15;;4445:99;;;560:25:6;;;548:2;533:18;4445:99:5;414:177:6;6794:256:0;;;;;;:::i;:::-;;:::i;:::-;;2475:706:5;;;:::i;3926:108::-;;;:::i;:::-;;;;;;;:::i;2293:101:2:-;;;:::i;2009:368:5:-;;;;;;:::i;:::-;;:::i;1638:85:2:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:2;1638:85;;4040:187:5;;;:::i;4338:101::-;4414:18;;;;;;;4338:101;;4805:87;4876:9;4805:87;;4699:100;;;3402:18:6;4776:16:5;3390:31:6;3372:50;;3360:2;3345:18;4699:100:5;3228:200:6;4898:104:5;;;3607:10:6;4977:18:5;3595:23:6;3577:42;;3565:2;3550:18;4898:104:5;3433:192:6;2543:215:2;;;;;;:::i;:::-;;:::i;6794:256:0:-;6893:10;-1:-1:-1;;;;;6907:14:0;6893:28;;6889:109;;6938:53;;-1:-1:-1;;;6938:53:0;;6964:10;6938:53;;;4133:34:6;-1:-1:-1;;;;;6976:14:0;4203:15:6;4183:18;;;4176:43;4068:18;;6938:53:0;;;;;;;;6889:109;7003:42;7022:9;7033:11;7003:18;:42::i;:::-;6794:256;;:::o;2475:706:5:-;1531:13:2;:11;:13::i;:::-;2500:21:4::1;:19;:21::i;:::-;2544:15:5::2;:22:::0;2570:1:::2;2544:27:::0;2540:95:::2;;2594:30;;-1:-1:-1::0;;;2594:30:5::2;;;;;;;;;;;2540:95;2648:18;::::0;::::2;::::0;::::2;;;2644:97;;;2689:41;;-1:-1:-1::0;;;2689:41:5::2;;;;;;;;;;;2644:97;2754:17;::::0;::::2;;2750:95;;;2794:40;;-1:-1:-1::0;;;2794:40:5::2;;;;;;;;;;;2750:95;2855:18;:25:::0;;-1:-1:-1;;2855:25:5::2;;;::::0;;2910:188:::2;::::0;-1:-1:-1;;;2910:188:5;;2959:9:::2;2910:188:::0;;::::2;4481:25:6::0;;;;2982:16:5::2;4554:18:6::0;4542:31;4522:18;;;4515:59;804:1:5::2;4590:18:6::0;;;4583:47;3047:18:5::2;4649:10:6::0;4695:15;4675:18;;;4668:43;-1:-1:-1;4727:19:6;;;4720:44;-1:-1:-1;;;;;;;2910:16:5::2;:35;::::0;::::2;::::0;4453:19:6;;2910:188:5::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3108:15;:27:::0;;;3150:24:::2;::::0;560:25:6;;;2890:208:5;;-1:-1:-1;3150:24:5::2;::::0;548:2:6;533:18;3150:24:5::2;;;;;;;2530:651;2542:20:4::1;1857:1:::0;3068:21;;2888:208;2542:20:::1;2475:706:5:o:0;3926:108::-;3977:16;4012:15;4005:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3926:108;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;2009:368:5:-:0;1531:13:2;:11;:13::i;:::-;2094:7:5::1;:14;2112:1;2094:19:::0;2090:93:::1;;2136:36;;-1:-1:-1::0;;;2136:36:5::1;;;;;;;;;;;2090:93;2196:17;::::0;::::1;;2192:95;;;2236:40;;-1:-1:-1::0;;;2236:40:5::1;;;;;;;;;;;2192:95;2305:25:::0;;::::1;::::0;:15:::1;::::0;:25:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2345;2362:7;2345:25;;;;;;:::i;:::-;;;;;;;;2009:368:::0;:::o;4040:187::-;4108:17;;4084:7;;4108:17;;4103:93;;4148:37;;-1:-1:-1;;;4148:37:5;;;;;;;;;;;4103:93;-1:-1:-1;4212:8:5;;;4040:187::o;2543:215:2:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:2;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:2;;2700:1:::1;2672:31;::::0;::::1;352:51:6::0;325:18;;2672:31:2::1;206:203:6::0;2623:91:2::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3404:492:5:-;3526:15;;3513:9;:28;3509:65;;3404:492;;:::o;3509:65::-;3584:20;3607:11;3619:1;3607:14;;;;;;;;:::i;:::-;;;;;;;3584:37;;3631:19;3668:15;:22;;;;3653:12;:37;;;;:::i;:::-;3631:59;;3711:15;3727:11;3711:28;;;;;;;;:::i;:::-;;;;;;;;;;;3700:8;:39;;;3749:18;:26;;-1:-1:-1;;3785:24:5;3749:18;3785:24;;;3825;;;;;;560:25:6;;;548:2;533:18;;414:177;3825:24:5;;;;;;;;3864:25;3880:8;;3864:25;;;;560::6;;548:2;533:18;;414:177;3864:25:5;;;;;;;;3499:397;;3404:492;;:::o;1796:162:2:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:2;735:10:3;1855:23:2;1851:101;;1901:40;;-1:-1:-1;;;1901:40:2;;735:10:3;1901:40:2;;;352:51:6;325:18;;1901:40:2;206:203:6;2575:307:4;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:4;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;2912:187:2:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:2;;;-1:-1:-1;;;;;;3020:17:2;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;596:127:6;657:10;652:3;648:20;645:1;638:31;688:4;685:1;678:15;712:4;709:1;702:15;728:902;782:5;835:3;828:4;820:6;816:17;812:27;802:55;;853:1;850;843:12;802:55;889:6;876:20;915:4;938:18;975:2;971;968:10;965:36;;;981:18;;:::i;:::-;1027:2;1024:1;1020:10;1059:2;1053:9;1122:2;1118:7;1113:2;1109;1105:11;1101:25;1093:6;1089:38;1177:6;1165:10;1162:22;1157:2;1145:10;1142:18;1139:46;1136:72;;;1188:18;;:::i;:::-;1224:2;1217:22;1274:18;;;1350:15;;;1346:24;;;1308:15;;;;-1:-1:-1;1382:15:6;;;1379:35;;;1410:1;1407;1400:12;1379:35;1446:2;1438:6;1434:15;1423:26;;1458:142;1474:6;1469:3;1466:15;1458:142;;;1540:17;;1528:30;;1578:12;;;;1491;;;;1458:142;;;1618:6;728:902;-1:-1:-1;;;;;;;728:902:6:o;1635:416::-;1728:6;1736;1789:2;1777:9;1768:7;1764:23;1760:32;1757:52;;;1805:1;1802;1795:12;1757:52;1841:9;1828:23;1818:33;;1902:2;1891:9;1887:18;1874:32;1929:18;1921:6;1918:30;1915:50;;;1961:1;1958;1951:12;1915:50;1984:61;2037:7;2028:6;2017:9;2013:22;1984:61;:::i;:::-;1974:71;;;1635:416;;;;;:::o;2056:632::-;2227:2;2279:21;;;2349:13;;2252:18;;;2371:22;;;2198:4;;2227:2;2450:15;;;;2424:2;2409:18;;;2198:4;2493:169;2507:6;2504:1;2501:13;2493:169;;;2568:13;;2556:26;;2637:15;;;;2602:12;;;;2529:1;2522:9;2493:169;;;-1:-1:-1;2679:3:6;;2056:632;-1:-1:-1;;;;;;2056:632:6:o;2693:348::-;2777:6;2830:2;2818:9;2809:7;2805:23;2801:32;2798:52;;;2846:1;2843;2836:12;2798:52;2886:9;2873:23;2919:18;2911:6;2908:30;2905:50;;;2951:1;2948;2941:12;2905:50;2974:61;3027:7;3018:6;3007:9;3003:22;2974:61;:::i;:::-;2964:71;2693:348;-1:-1:-1;;;;2693:348:6:o;3630:286::-;3689:6;3742:2;3730:9;3721:7;3717:23;3713:32;3710:52;;;3758:1;3755;3748:12;3710:52;3784:23;;-1:-1:-1;;;;;3836:31:6;;3826:42;;3816:70;;3882:1;3879;3872:12;3816:70;3905:5;3630:286;-1:-1:-1;;;3630:286:6:o;4775:184::-;4845:6;4898:2;4886:9;4877:7;4873:23;4869:32;4866:52;;;4914:1;4911;4904:12;4866:52;-1:-1:-1;4937:16:6;;4775:184;-1:-1:-1;4775:184:6:o;4964:127::-;5025:10;5020:3;5016:20;5013:1;5006:31;5056:4;5053:1;5046:15;5080:4;5077:1;5070:15;5096:209;5128:1;5154;5144:132;;5198:10;5193:3;5189:20;5186:1;5179:31;5233:4;5230:1;5223:15;5261:4;5258:1;5251:15;5144:132;-1:-1:-1;5290:9:6;;5096:209::o"},"methodIdentifiers":{"getCallbackGasLimit()":"de8be8e7","getGasLane()":"c19dd76b","getLastRequestId()":"19c2b4c3","getRaffleTickets()":"5a3e2dac","getSubscriptionId()":"de3d9fb7","getVrfCoordinator()":"0cb4a29d","getWinner()":"8e7ea5b2","isRaffleCompleted()":"0c08b8b3","isRaffleInProgress()":"a0930ea2","owner()":"8da5cb5b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","setRaffleTickets(uint256[])":"868c55c6","startRaffle()":"242284f1","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ArtNightRaffle__InvalidTicketArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArtNightRaffle__NoTicketsSet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArtNightRaffle__RaffleAlreadyCompleted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArtNightRaffle__RaffleAlreadyInProgress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArtNightRaffle__RaffleNotInProgress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winner\",\"type\":\"uint256\"}],\"name\":\"RaffleCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RaffleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"name\":\"RaffleTicketsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winner\",\"type\":\"uint256\"}],\"name\":\"WinnerSelected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getCallbackGasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasLane\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleTickets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSubscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVrfCoordinator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWinner\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRaffleCompleted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isRaffleInProgress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tickets\",\"type\":\"uint256[]\"}],\"name\":\"setRaffleTickets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startRaffle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A raffle contract that uses Chainlink VRF 2.5 to randomly select winners\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRaffleTickets(uint256[])\":{\"details\":\"Set the raffle tickets array\",\"params\":{\"tickets\":\"Array of ticket numbers\"}},\"startRaffle()\":{\"details\":\"Start the raffle by requesting random number from Chainlink VRF\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ArtNightRaffle\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ArtNightRaffle.sol\":\"ArtNightRaffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/ArtNightRaffle.sol\":{\"keccak256\":\"0x3e4f7e759e56c2fdd90cc8c6c9784679621fafcc477866f6976c12772a3275b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c6566f56aff00b4cf6fb46439f80c14789ade43861cfb1aab910b42c81679e5\",\"dweb:/ipfs/QmRdAaChnAhBogerRZhXpgvk5kxRpfWuebSC87xNFEyBxQ\"]}},\"version\":1}"}}}}}